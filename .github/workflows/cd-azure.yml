name: CD - Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: 'smarttesttask-api'
  AZURE_WEBAPP_PACKAGE_PATH: './publish'
  CONFIGURATION: Release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore SmartTestTask.sln

    - name: Build
      run: dotnet build SmartTestTask.sln --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Publish
      run: |
        dotnet publish src/SmartTestTask.API/SmartTestTask.API.csproj \
          --configuration ${{ env.CONFIGURATION }} \
          --no-build \
          --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Upload artifact for deployment
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy-staging:
    if: github.event_name == 'push' || github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}-staging
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Run smoke tests
      run: |
        sleep 30
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}-staging.azurewebsites.net/api/health)
        if [ $response -eq 200 ]; then
          echo "Health check passed"
        else
          echo "Health check failed with status code: $response"
          exit 1
        fi

  deploy-production:
    if: github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_PRODUCTION }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Run smoke tests
      run: |
        sleep 30
        response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/health)
        if [ $response -eq 200 ]; then
          echo "Health check passed"
        else
          echo "Health check failed with status code: $response"
          exit 1
        fi
